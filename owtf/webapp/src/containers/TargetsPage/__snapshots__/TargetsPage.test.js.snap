// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Targets Page component Testing dumb TargetPage component Should render without errors 1`] = `
<withTheme(Pane)
  data-test="targetsPageComponent"
  margin={20}
>
  <withTheme(Pane)
    clearfix={true}
    display="flex"
    flexDirection="row"
    flexWrap="wrap"
    justifyContent="center"
    overflow="hidden"
  >
    <withTheme(Pane)
      id="add_targets"
      margin={20}
      width="40%"
    >
      <withTheme(Pane)
        flexDirection="column"
      >
        <withTheme(Heading)
          color="#0788DE"
          size={700}
        >
          Add Targets
        </withTheme(Heading)>
        <withTheme(Textarea)
          marginTop={10}
          name="newTargetUrls"
          onChange={[Function]}
          placeholder="Input targets seperated by new line"
          value=""
        />
        <withTheme(Button)
          appearance="primary"
          data-test="addTargetButton"
          disabled={false}
          marginTop={10}
          onClick={[Function]}
        >
          Add Targets
        </withTheme(Button)>
        <Connect(Plugins)
          handleAlertMsg={[Function]}
          handlePluginClose={[Function]}
          pluginShow={false}
          resetTargetState={[Function]}
          selectedTargets={Array []}
        />
      </withTheme(Pane)>
    </withTheme(Pane)>
    <withTheme(Pane)
      flex={1}
      margin={40}
    >
      <withTheme(Pane)
        display="flex"
        padding={16}
      >
        <withTheme(Pane)
          alignItems="center"
          display="flex"
          flex={1}
        >
          <withTheme(Heading)
            size={700}
          >
            TARGETS
          </withTheme(Heading)>
        </withTheme(Pane)>
        <withTheme(Pane)
          marginRight={16}
        >
          <Connect(Sessions) />
        </withTheme(Pane)>
        <withTheme(Pane)>
          <withTheme(Button)
            onClick={[Function]}
          >
            <withTheme(Icon)
              icon="import"
              marginRight={10}
            />
            Export
          </withTheme(Button)>
          <withTheme(Button)
            appearance="primary"
            data-test="pluginButton"
            intent="success"
            onClick={[Function]}
          >
            <withTheme(Icon)
              icon="build"
              marginRight={10}
            />
            Run
          </withTheme(Button)>
        </withTheme(Pane)>
      </withTheme(Pane)>
      <withTheme(Pane)
        alignItems="center"
        display="flex"
        height={400}
        justifyContent="center"
      >
        <withTheme(Spinner)
          size={64}
        />
      </withTheme(Pane)>
      <Connect(TargetsTable)
        getCurrentSession={[Function]}
        handleAlertMsg={[Function]}
        handlePluginShow={[Function]}
        targets={Array []}
        updateSelectedTargets={[Function]}
      />
    </withTheme(Pane)>
  </withTheme(Pane)>
</withTheme(Pane)>
`;

exports[`Targets Page component Testing dumb TargetsTable component Should render without errors 1`] = `
<Table
  data-test="targetsTableComponent"
  marginTop={20}
>
  <TableHead
    accountForScrollbar={true}
    height={50}
  >
    <SearchTableHeaderCell
      flexGrow={3}
      flexShrink={0}
      icon="search"
      onChange={[Function]}
      placeholder="URL"
      spellCheck={true}
      value=""
    />
    <TextTableHeaderCell>
      <Popover
        animationDuration={300}
        bringFocusInside={false}
        content={[Function]}
        minHeight={40}
        minWidth={200}
        onBodyClick={[Function]}
        onClose={[Function]}
        onCloseComplete={[Function]}
        onOpen={[Function]}
        onOpenComplete={[Function]}
        position="bottom-left"
        shouldCloseOnExternalClick={true}
        trigger="click"
      >
        <withTheme(TextDropdownButton)
          icon="caret-down"
        >
          Severity
        </withTheme(TextDropdownButton)>
      </Popover>
    </TextTableHeaderCell>
    <TextTableHeaderCell>
      Actions
    </TextTableHeaderCell>
  </TableHead>
  <TableVirtualBody
    allowAutoHeight={false}
    defaultHeight={48}
    height={500}
    overscanCount={5}
    useAverageAutoHeightEstimation={true}
  >
    <withTheme(Pane)>
      <withTheme(TableRow)
        height={75}
        key="6"
      >
        <withTheme(TableCell)
          flexGrow={3}
          flexShrink={0}
        >
          <withTheme(Pane)
            alignItems="center"
            display="flex"
            flexDirection="row"
          >
            <withTheme(Checkbox)
              checked={false}
              id="http://fb.com"
              margin={10}
              onChange={[Function]}
            />
            <withTheme(Link)
              href="/targets/6"
              size={500}
            >
               
              http://fb.com
               (
              157.240.16.35
              )
            </withTheme(Link)>
          </withTheme(Pane)>
        </withTheme(TableCell)>
        <TextTableCell
          isNumber={false}
        >
          <withTheme(Badge)
            color="orange"
          >
            Medium
          </withTheme(Badge)>
        </TextTableCell>
        <withTheme(TableCell)>
          <Popover
            animationDuration={300}
            bringFocusInside={false}
            content={[Function]}
            data-test="actionsPopover"
            minHeight={40}
            minWidth={200}
            onBodyClick={[Function]}
            onClose={[Function]}
            onCloseComplete={[Function]}
            onOpen={[Function]}
            onOpenComplete={[Function]}
            position="bottom-right"
            shouldCloseOnExternalClick={true}
            trigger="click"
          >
            <withTheme(IconButton)
              appearance="minimal"
              height={24}
              icon="more"
            />
          </Popover>
        </withTheme(TableCell)>
      </withTheme(TableRow)>
    </withTheme(Pane)>
  </TableVirtualBody>
</Table>
`;
